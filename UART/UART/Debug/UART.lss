
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000021a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001c6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000021a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c36  00000000  00000000  000002bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000858  00000000  00000000  00000ef2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003fe  00000000  00000000  0000174a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001b48  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000417  00000000  00000000  00001b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000030d  00000000  00000000  00001fa3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	06 d0       	rcall	.+12     	; 0xa6 <main>
  9a:	93 c0       	rjmp	.+294    	; 0x1c2 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <UART0_transmit>:

uint8_t UART0_receive(void)
{
	while(!(UCSR0A & (1 << RXC1)));
	return UDR0;
}
  9e:	5d 9b       	sbis	0x0b, 5	; 11
  a0:	fe cf       	rjmp	.-4      	; 0x9e <UART0_transmit>
  a2:	8c b9       	out	0x0c, r24	; 12
  a4:	08 95       	ret

000000a6 <main>:

int main(void)
{
	DDRE = 0xFE;
  a6:	8e ef       	ldi	r24, 0xFE	; 254
  a8:	82 b9       	out	0x02, r24	; 2
	UCSR0B = (1 << RXEN0) | (1 << TXEN0);
  aa:	88 e1       	ldi	r24, 0x18	; 24
  ac:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
  ae:	86 e0       	ldi	r24, 0x06	; 6
  b0:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	UBRR0L = 95;
  b4:	8f e5       	ldi	r24, 0x5F	; 95
  b6:	89 b9       	out	0x09, r24	; 9
    /* Replace with your application code */
    while (1) 
    {
		UART0_transmit('K');
  b8:	8b e4       	ldi	r24, 0x4B	; 75
  ba:	f1 df       	rcall	.-30     	; 0x9e <UART0_transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	9c e2       	ldi	r25, 0x2C	; 44
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	80 40       	sbci	r24, 0x00	; 0
  c6:	90 40       	sbci	r25, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x1c>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x26>
  cc:	00 00       	nop
		_delay_ms(1000);
		UART0_transmit('a');
  ce:	81 e6       	ldi	r24, 0x61	; 97
  d0:	e6 df       	rcall	.-52     	; 0x9e <UART0_transmit>
  d2:	2f ef       	ldi	r18, 0xFF	; 255
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	9c e2       	ldi	r25, 0x2C	; 44
  d8:	21 50       	subi	r18, 0x01	; 1
  da:	80 40       	sbci	r24, 0x00	; 0
  dc:	90 40       	sbci	r25, 0x00	; 0
  de:	e1 f7       	brne	.-8      	; 0xd8 <main+0x32>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x3c>
		_delay_ms(1000);
		UART0_transmit('n');
  e2:	00 00       	nop
  e4:	8e e6       	ldi	r24, 0x6E	; 110
  e6:	db df       	rcall	.-74     	; 0x9e <UART0_transmit>
  e8:	2f ef       	ldi	r18, 0xFF	; 255
  ea:	8f ef       	ldi	r24, 0xFF	; 255
  ec:	9c e2       	ldi	r25, 0x2C	; 44
  ee:	21 50       	subi	r18, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <main+0x48>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x52>
		_delay_ms(1000);
		UART0_transmit('g');
  f8:	00 00       	nop
  fa:	87 e6       	ldi	r24, 0x67	; 103
  fc:	d0 df       	rcall	.-96     	; 0x9e <UART0_transmit>
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	8f ef       	ldi	r24, 0xFF	; 255
 102:	9c e2       	ldi	r25, 0x2C	; 44
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x5e>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x68>
		_delay_ms(1000);
		UART0_transmit('H');
 10e:	00 00       	nop
 110:	88 e4       	ldi	r24, 0x48	; 72
 112:	c5 df       	rcall	.-118    	; 0x9e <UART0_transmit>
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	9c e2       	ldi	r25, 0x2C	; 44
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x74>
 122:	00 c0       	rjmp	.+0      	; 0x124 <main+0x7e>
		_delay_ms(1000);
		UART0_transmit('y');
 124:	00 00       	nop
 126:	89 e7       	ldi	r24, 0x79	; 121
 128:	ba df       	rcall	.-140    	; 0x9e <UART0_transmit>
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	9c e2       	ldi	r25, 0x2C	; 44
 130:	21 50       	subi	r18, 0x01	; 1
 132:	80 40       	sbci	r24, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0x8a>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0x94>
		_delay_ms(1000);
		UART0_transmit('e');
 13a:	00 00       	nop
 13c:	85 e6       	ldi	r24, 0x65	; 101
 13e:	af df       	rcall	.-162    	; 0x9e <UART0_transmit>
 140:	2f ef       	ldi	r18, 0xFF	; 255
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	9c e2       	ldi	r25, 0x2C	; 44
 146:	21 50       	subi	r18, 0x01	; 1
 148:	80 40       	sbci	r24, 0x00	; 0
 14a:	90 40       	sbci	r25, 0x00	; 0
 14c:	e1 f7       	brne	.-8      	; 0x146 <main+0xa0>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0xaa>
		_delay_ms(1000);
		UART0_transmit('o');
 150:	00 00       	nop
 152:	8f e6       	ldi	r24, 0x6F	; 111
 154:	a4 df       	rcall	.-184    	; 0x9e <UART0_transmit>
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	8f ef       	ldi	r24, 0xFF	; 255
 15a:	9c e2       	ldi	r25, 0x2C	; 44
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0xb6>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0xc0>
		_delay_ms(1000);
		UART0_transmit('n');
 166:	00 00       	nop
 168:	8e e6       	ldi	r24, 0x6E	; 110
 16a:	99 df       	rcall	.-206    	; 0x9e <UART0_transmit>
 16c:	2f ef       	ldi	r18, 0xFF	; 255
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	9c e2       	ldi	r25, 0x2C	; 44
 172:	21 50       	subi	r18, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	e1 f7       	brne	.-8      	; 0x172 <main+0xcc>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <main+0xd6>
		_delay_ms(1000);
		UART0_transmit('G');
 17c:	00 00       	nop
 17e:	87 e4       	ldi	r24, 0x47	; 71
 180:	8e df       	rcall	.-228    	; 0x9e <UART0_transmit>
 182:	2f ef       	ldi	r18, 0xFF	; 255
 184:	8f ef       	ldi	r24, 0xFF	; 255
 186:	9c e2       	ldi	r25, 0x2C	; 44
 188:	21 50       	subi	r18, 0x01	; 1
 18a:	80 40       	sbci	r24, 0x00	; 0
 18c:	90 40       	sbci	r25, 0x00	; 0
 18e:	e1 f7       	brne	.-8      	; 0x188 <main+0xe2>
 190:	00 c0       	rjmp	.+0      	; 0x192 <main+0xec>
		_delay_ms(1000);
		UART0_transmit('u');
 192:	00 00       	nop
 194:	85 e7       	ldi	r24, 0x75	; 117
 196:	83 df       	rcall	.-250    	; 0x9e <UART0_transmit>
 198:	2f ef       	ldi	r18, 0xFF	; 255
 19a:	8f ef       	ldi	r24, 0xFF	; 255
 19c:	9c e2       	ldi	r25, 0x2C	; 44
 19e:	21 50       	subi	r18, 0x01	; 1
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	90 40       	sbci	r25, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <main+0xf8>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x102>
		_delay_ms(1000);
		UART0_transmit('\n');
 1a8:	00 00       	nop
 1aa:	8a e0       	ldi	r24, 0x0A	; 10
 1ac:	78 df       	rcall	.-272    	; 0x9e <UART0_transmit>
 1ae:	2f ef       	ldi	r18, 0xFF	; 255
 1b0:	8f ef       	ldi	r24, 0xFF	; 255
 1b2:	9c e2       	ldi	r25, 0x2C	; 44
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	80 40       	sbci	r24, 0x00	; 0
 1b8:	90 40       	sbci	r25, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x10e>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x118>
 1be:	00 00       	nop
 1c0:	7b cf       	rjmp	.-266    	; 0xb8 <main+0x12>

000001c2 <_exit>:
 1c2:	f8 94       	cli

000001c4 <__stop_program>:
 1c4:	ff cf       	rjmp	.-2      	; 0x1c4 <__stop_program>
